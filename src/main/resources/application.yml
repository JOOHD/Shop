spring:
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 5MB

  profiles:
    active: none  # <develop, production, staging, none> 옵션
    include: oauth2

  datasource:
    url: jdbc:mysql://localhost:3306/shop?serverTimezone=UTC&characterEncoding=UTF-8
    username: root
    password: 1234
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show_sql: true
    properties:
      hibernate:
        format_sql: true # 줄바꿈 포함
        default_batch_fetch_size: 1000

  redis:
    host: localhost
    port: 6379

  data:
    redis:
      host: 127.0.0.1
      port: 6379
      time-to-live: 600000  # 60분 TTL 설정 (이미지 캐싱용)

  cache:
    type: redis
    cache-names: profileImages

  web:
    resources:
      static-locations: classpath:/static/, file:/static/

  mail:
    host: smtp.naver.com
    port: 465
    username: hddong728@naver.com
    password: Joodone9!
    auth-code-expiration-millis: 1800000  # 30분

  jwt:
    secret: bXktc3VwZXItc2VjcmV0LWtleS10aGF0LWlzLWxvbmctZW5vdWdo

  backend:
    url: http://localhost:8080

  frontend:
    url: http://localhost:3000

  imp:
    api:
      key: ${IMP_API_KEY}
      secretkey: ${IMP_SECRET_KEY}

logging:
  level:
    org.hibernate.SQL: debug    # SQL 쿼리 출력
    org.hibernate.type: trace   # ? 파라미터 값도 함께 출력